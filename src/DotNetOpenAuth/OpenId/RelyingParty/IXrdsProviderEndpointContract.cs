// <auto-generated />

namespace DotNetOpenAuth.OpenId.RelyingParty {
	using System;
	using System.Diagnostics.CodeAnalysis;
	using System.Diagnostics.Contracts;
	using System.Globalization;
	using DotNetOpenAuth.OpenId.Messages;
	using System.Collections.ObjectModel;

	[ContractClassFor(typeof(IXrdsProviderEndpoint))]
	internal abstract class IXrdsProviderEndpointContract : IXrdsProviderEndpoint {
		#region IXrdsProviderEndpoint Properties

		int? IXrdsProviderEndpoint.ServicePriority {
			get { throw new System.NotImplementedException(); }
		}

		int? IXrdsProviderEndpoint.UriPriority {
			get { throw new System.NotImplementedException(); }
		}

		#endregion

		#region IProviderEndpoint Properties

		Version IProviderEndpoint.Version {
			get {
				Contract.Ensures(Contract.Result<Version>() != null);
				throw new System.NotImplementedException();
			}
		}

		Uri IProviderEndpoint.Uri {
			get {
				Contract.Ensures(Contract.Result<Uri>() != null);
				throw new System.NotImplementedException();
			}
		}

		ReadOnlyCollection<string> IProviderEndpoint.Capabilities {
			get {
				Contract.Ensures(Contract.Result<ReadOnlyCollection<string>>() != null);
				throw new NotImplementedException();
			}
		}

		#endregion
	}
}
