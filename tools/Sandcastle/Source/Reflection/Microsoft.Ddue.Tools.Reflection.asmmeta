.assembly extern Microsoft.Ddue.Tools.Compiler
{
  .publickeytoken = (4D DC 2B E8 53 17 C2 74)
}
.assembly extern mscorlib
{
  .publickeytoken = (B7 7A 5C 56 19 34 E0 89)
}
.assembly Microsoft.Ddue.Tools.Reflection
{
  .custom instance void [mscorlib]System.CLSCompliantAttribute::.ctor(bool) = { bool(false) }
  .custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = { bool(false) }
  .publickey = (00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 EF 09 EE D7 93 0B 34 BA 88 83 E7 DB 9F 08 F5 DF A0 D9 F1 7A 97 8E 98 F3 99 03 36 B2 2A 75 D6 BB 2C 25 90 6C 4F 4E 5D 42 60 00 A9 22 00 A9 CE FE 3F 5E C4 22 BA 1E FF 47 7D C4 14 E7 52 C3 30 07 1C 66 1C 58 3F 28 48 0C 03 35 94 CE 5F A5 FC 44 94 D2 A4 42 95 E5 A3 3E AD B2 FD FF 45 13 77 FD BE 62 48 38 EF 02 BF 22 54 00 56 5D DB DA 10 D8 7E 77 F9 7F 9F 20 60 11 4B 49 3A 4D 62 FE C3 C3)
  .hash algorithm 0x00008004
}
.namespace Microsoft.Ddue.Tools.Reflection
{
  .class public AllDocumentedFilter
    extends Microsoft.Ddue.Tools.Reflection.ApiFilter
  {
    .method public virtual hidebysig 
      instance bool IsExposedNamespace(class [Microsoft.Ddue.Tools.Compiler]System.Compiler.Namespace space)
    {
      ret
    }
    .method public virtual hidebysig 
      instance bool IsExposedType(class [Microsoft.Ddue.Tools.Compiler]System.Compiler.TypeNode 'type')
    {
      ret
    }
    .method public virtual hidebysig 
      instance bool IsExposedMember(class [Microsoft.Ddue.Tools.Compiler]System.Compiler.Member member)
    {
      ret
    }
    .method public hidebysig specialname 
      instance void .ctor()
    {
      ret
    }
  }
  .class public AllTopicFilter
    extends Microsoft.Ddue.Tools.Reflection.AllDocumentedFilter
  {
    .method public virtual hidebysig 
      instance bool IsExposedMember(class [Microsoft.Ddue.Tools.Compiler]System.Compiler.Member member)
    {
      ret
    }
    .method public hidebysig specialname 
      instance void .ctor()
    {
      ret
    }
  }
  .class public abstract ApiFilter
    extends [mscorlib]System.Object
  {
    .method public virtual hidebysig newslot 
      instance bool IsExposedNamespace(class [Microsoft.Ddue.Tools.Compiler]System.Compiler.Namespace space)
    {
      ret
    }
    .method public virtual hidebysig newslot abstract 
      instance bool IsExposedType(class [Microsoft.Ddue.Tools.Compiler]System.Compiler.TypeNode 'type')
    {
    }
    .method public virtual hidebysig newslot abstract 
      instance bool IsExposedMember(class [Microsoft.Ddue.Tools.Compiler]System.Compiler.Member member)
    {
    }
    .method public virtual hidebysig newslot 
      instance bool IsExposedApi(class [Microsoft.Ddue.Tools.Compiler]System.Compiler.Member api)
    {
      ret
    }
    .method public virtual hidebysig newslot 
      instance bool IsExposedAttribute(class [Microsoft.Ddue.Tools.Compiler]System.Compiler.AttributeNode attribute)
    {
      ret
    }
    .method family hidebysig specialname 
      instance void .ctor()
    {
      ret
    }
  }
  .class public abstract ApiNamer
    extends [mscorlib]System.Object
  {
    .method public virtual hidebysig newslot abstract 
      instance string GetNamespaceName(class [Microsoft.Ddue.Tools.Compiler]System.Compiler.Namespace space)
    {
    }
    .method public virtual hidebysig newslot abstract 
      instance string GetTypeName(class [Microsoft.Ddue.Tools.Compiler]System.Compiler.TypeNode 'type')
    {
    }
    .method public virtual hidebysig newslot abstract 
      instance string GetMemberName(class [Microsoft.Ddue.Tools.Compiler]System.Compiler.Member member)
    {
    }
    .method public virtual hidebysig newslot 
      instance string GetApiName(class [Microsoft.Ddue.Tools.Compiler]System.Compiler.Member api)
    {
      ret
    }
    .method family hidebysig specialname 
      instance void .ctor()
    {
      ret
    }
  }
  .class public ApiVisitor
    extends [mscorlib]System.Object
    implements [mscorlib]System.IDisposable
  {
    .method family hidebysig specialname 
      instance void .ctor(class Microsoft.Ddue.Tools.Reflection.ApiFilter 'filter')
    {
      ret
    }
    .method family hidebysig specialname 
      instance void .ctor()
    {
      ret
    }
    .method public hidebysig specialname 
      instance class Microsoft.Ddue.Tools.Reflection.ApiFilter get_ApiFilter()
    {
      ret
    }
    .method public hidebysig specialname 
      instance void set_ApiFilter(class Microsoft.Ddue.Tools.Reflection.ApiFilter 'value')
    {
      ret
    }
    .method public hidebysig specialname 
      instance class [Microsoft.Ddue.Tools.Compiler]System.Compiler.AssemblyNode[] get_Assemblies()
    {
      ret
    }
    .method public hidebysig specialname 
      instance class [Microsoft.Ddue.Tools.Compiler]System.Compiler.AssemblyNode[] get_AccessoryAssemblies()
    {
      ret
    }
    .method public hidebysig 
      instance void LoadAccessoryAssembly(string filePath)
    {
      ret
    }
    .method public hidebysig 
      instance void LoadAccessoryAssemblies(string filePattern)
    {
      ret
    }
    .method public hidebysig 
      instance void LoadAssembly(string filePath)
    {
      ret
    }
    .method public hidebysig 
      instance void LoadAssemblies(string filePattern)
    {
      ret
    }
    .method public hidebysig 
      instance void VisitApis()
    {
      ret
    }
    .method family virtual hidebysig newslot 
      instance void VisitNamespaces(class [Microsoft.Ddue.Tools.Compiler]System.Compiler.NamespaceList spaces)
    {
      ret
    }
    .method family virtual hidebysig newslot 
      instance void VisitNamespace(class [Microsoft.Ddue.Tools.Compiler]System.Compiler.Namespace space)
    {
      ret
    }
    .method family virtual hidebysig newslot 
      instance void VisitTypes(class [Microsoft.Ddue.Tools.Compiler]System.Compiler.TypeNodeList types)
    {
      ret
    }
    .method family virtual hidebysig newslot 
      instance void VisitType(class [Microsoft.Ddue.Tools.Compiler]System.Compiler.TypeNode 'type')
    {
      ret
    }
    .method family virtual hidebysig newslot 
      instance void VisitMembers(class [Microsoft.Ddue.Tools.Compiler]System.Compiler.MemberList members)
    {
      ret
    }
    .method family virtual hidebysig newslot 
      instance void VisitMember(class [Microsoft.Ddue.Tools.Compiler]System.Compiler.Member member)
    {
      ret
    }
    .method family virtual hidebysig newslot 
      instance void VisitEntity(class [Microsoft.Ddue.Tools.Compiler]System.Compiler.Member entity)
    {
      ret
    }
    .method public virtual hidebysig newslot 
      instance void Dispose()
    {
      ret
    }
    .method public hidebysig specialname 
      instance class [mscorlib]'System.Collections.Generic.Dictionary`2'<string,class [mscorlib]System.Exception> get_LoadErrors()
    {
      ret
    }
    .method public hidebysig specialname 
      instance class [Microsoft.Ddue.Tools.Compiler]System.Compiler.Module/AssemblyReferenceResolver get_UnresolvedModuleHandler()
    {
      ret
    }
    .method public hidebysig specialname 
      instance void set_UnresolvedModuleHandler(class [Microsoft.Ddue.Tools.Compiler]System.Compiler.Module/AssemblyReferenceResolver 'value')
    {
      ret
    }
    .property instance class [Microsoft.Ddue.Tools.Compiler]System.Compiler.AssemblyNode[] AccessoryAssemblies()
    {
      .get instance class [Microsoft.Ddue.Tools.Compiler]System.Compiler.AssemblyNode[] Microsoft.Ddue.Tools.Reflection.ApiVisitor::get_AccessoryAssemblies()
    }
    .property instance class Microsoft.Ddue.Tools.Reflection.ApiFilter ApiFilter()
    {
      .get instance class Microsoft.Ddue.Tools.Reflection.ApiFilter Microsoft.Ddue.Tools.Reflection.ApiVisitor::get_ApiFilter()
      .set instance void Microsoft.Ddue.Tools.Reflection.ApiVisitor::set_ApiFilter(class Microsoft.Ddue.Tools.Reflection.ApiFilter)
    }
    .property instance class [Microsoft.Ddue.Tools.Compiler]System.Compiler.AssemblyNode[] Assemblies()
    {
      .get instance class [Microsoft.Ddue.Tools.Compiler]System.Compiler.AssemblyNode[] Microsoft.Ddue.Tools.Reflection.ApiVisitor::get_Assemblies()
    }
    .property instance class [mscorlib]'System.Collections.Generic.Dictionary`2'<string,class [mscorlib]System.Exception> LoadErrors()
    {
      .get instance class [mscorlib]'System.Collections.Generic.Dictionary`2'<string,class [mscorlib]System.Exception> Microsoft.Ddue.Tools.Reflection.ApiVisitor::get_LoadErrors()
    }
    .property instance class [Microsoft.Ddue.Tools.Compiler]System.Compiler.Module/AssemblyReferenceResolver UnresolvedModuleHandler()
    {
      .get instance class [Microsoft.Ddue.Tools.Compiler]System.Compiler.Module/AssemblyReferenceResolver Microsoft.Ddue.Tools.Reflection.ApiVisitor::get_UnresolvedModuleHandler()
      .set instance void Microsoft.Ddue.Tools.Reflection.ApiVisitor::set_UnresolvedModuleHandler(class [Microsoft.Ddue.Tools.Compiler]System.Compiler.Module/AssemblyReferenceResolver)
    }
  }
  .class public DocStudioNamer
    extends Microsoft.Ddue.Tools.Reflection.ApiNamer
  {
    .method public virtual hidebysig 
      instance string GetNamespaceName(class [Microsoft.Ddue.Tools.Compiler]System.Compiler.Namespace space)
    {
      ret
    }
    .method public virtual hidebysig 
      instance string GetTypeName(class [Microsoft.Ddue.Tools.Compiler]System.Compiler.TypeNode 'type')
    {
      ret
    }
    .method public virtual hidebysig 
      instance string GetMemberName(class [Microsoft.Ddue.Tools.Compiler]System.Compiler.Member member)
    {
      ret
    }
    .method public hidebysig specialname 
      instance void .ctor()
    {
      ret
    }
  }
  .class public ExternalDocumentedFilter
    extends Microsoft.Ddue.Tools.Reflection.ApiFilter
  {
    .method public virtual hidebysig 
      instance bool IsExposedType(class [Microsoft.Ddue.Tools.Compiler]System.Compiler.TypeNode 'type')
    {
      ret
    }
    .method public virtual hidebysig 
      instance bool IsExposedMember(class [Microsoft.Ddue.Tools.Compiler]System.Compiler.Member member)
    {
      ret
    }
    .method public hidebysig specialname 
      instance void .ctor()
    {
      ret
    }
  }
  .class public ExternalFilter
    extends Microsoft.Ddue.Tools.Reflection.ApiFilter
  {
    .method public virtual hidebysig 
      instance bool IsExposedType(class [Microsoft.Ddue.Tools.Compiler]System.Compiler.TypeNode 'type')
    {
      ret
    }
    .method public virtual hidebysig 
      instance bool IsExposedMember(class [Microsoft.Ddue.Tools.Compiler]System.Compiler.Member member)
    {
      ret
    }
    .method public hidebysig specialname 
      instance void .ctor()
    {
      ret
    }
  }
  .class public ExternalTopicFilter
    extends Microsoft.Ddue.Tools.Reflection.ExternalDocumentedFilter
  {
    .method public virtual hidebysig 
      instance bool IsExposedMember(class [Microsoft.Ddue.Tools.Compiler]System.Compiler.Member member)
    {
      ret
    }
    .method public hidebysig specialname 
      instance void .ctor()
    {
      ret
    }
  }
  .class public NoFilter
    extends Microsoft.Ddue.Tools.Reflection.ApiFilter
  {
    .method public virtual hidebysig 
      instance bool IsExposedNamespace(class [Microsoft.Ddue.Tools.Compiler]System.Compiler.Namespace space)
    {
      ret
    }
    .method public virtual hidebysig 
      instance bool IsExposedType(class [Microsoft.Ddue.Tools.Compiler]System.Compiler.TypeNode 'type')
    {
      ret
    }
    .method public virtual hidebysig 
      instance bool IsExposedMember(class [Microsoft.Ddue.Tools.Compiler]System.Compiler.Member member)
    {
      ret
    }
    .method public virtual hidebysig 
      instance bool IsExposedApi(class [Microsoft.Ddue.Tools.Compiler]System.Compiler.Member api)
    {
      ret
    }
    .method public hidebysig specialname 
      instance void .ctor()
    {
      ret
    }
  }
  .class public abstract sealed ReflectionUtilities
    extends [mscorlib]System.Object
  {
    .method public static hidebysig 
      class [Microsoft.Ddue.Tools.Compiler]System.Compiler.Method[] GetImplementedMethods(class [Microsoft.Ddue.Tools.Compiler]System.Compiler.Method 'method')
    {
      ret
    }
    .method public static hidebysig 
      class [Microsoft.Ddue.Tools.Compiler]System.Compiler.Property[] GetImplementedProperties(class [Microsoft.Ddue.Tools.Compiler]System.Compiler.Property 'property')
    {
      ret
    }
    .method public static hidebysig 
      class [Microsoft.Ddue.Tools.Compiler]System.Compiler.Event[] GetImplementedEvents(class [Microsoft.Ddue.Tools.Compiler]System.Compiler.Event trigger)
    {
      ret
    }
    .method public static hidebysig 
      class [Microsoft.Ddue.Tools.Compiler]System.Compiler.TypeNode GetTemplateType(class [Microsoft.Ddue.Tools.Compiler]System.Compiler.TypeNode 'type')
    {
      ret
    }
    .method public static hidebysig 
      class [Microsoft.Ddue.Tools.Compiler]System.Compiler.Member GetTemplateMember(class [Microsoft.Ddue.Tools.Compiler]System.Compiler.Member member)
    {
      ret
    }
  }
}

